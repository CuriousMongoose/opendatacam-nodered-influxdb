[
    {
        "id": "1be6d032.e67d1",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "566cb152.9b7e1",
        "type": "inject",
        "z": "1be6d032.e67d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "3da16b51.38f164"
            ]
        ]
    },
    {
        "id": "3da16b51.38f164",
        "type": "http request",
        "z": "1be6d032.e67d1",
        "name": "Get ODC Status",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:8080/status",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "f5575ef8.335a88",
                "b13d3791.544db"
            ]
        ]
    },
    {
        "id": "f5575ef8.335a88",
        "type": "debug",
        "z": "1be6d032.e67d1",
        "name": "ODC status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 40,
        "wires": []
    },
    {
        "id": "b13d3791.544db",
        "type": "switch",
        "z": "1be6d032.e67d1",
        "name": "Recording Active?",
        "property": "payload.appState.recordingStatus.isRecording",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "3f5ec72a.be58f8"
            ],
            [
                "814cb9c1.212738"
            ],
            [
                "c11e8ba2.82be48"
            ]
        ]
    },
    {
        "id": "3f5ec72a.be58f8",
        "type": "function",
        "z": "1be6d032.e67d1",
        "name": "Current Recording ID",
        "func": "var recording = {\n    payload: msg.payload.appState.recordingStatus.recordingId\n}\nreturn recording;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "99714134.392d",
                "1632df99.378db",
                "2fedc885.2a1a88",
                "c4a5e2c2.7495f"
            ]
        ]
    },
    {
        "id": "99714134.392d",
        "type": "debug",
        "z": "1be6d032.e67d1",
        "name": "Recording ID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "2fedc885.2a1a88",
        "type": "http request",
        "z": "1be6d032.e67d1",
        "name": "Counter Data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/{{payload}}/counter",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "e18ac9bd.0ec428",
                "ffa2cee9.18b4e"
            ]
        ]
    },
    {
        "id": "ffa2cee9.18b4e",
        "type": "debug",
        "z": "1be6d032.e67d1",
        "name": "Counter Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "1632df99.378db",
        "type": "http request",
        "z": "1be6d032.e67d1",
        "name": "Stop Current Recording",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/stop",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c4a5e2c2.7495f",
        "type": "http request",
        "z": "1be6d032.e67d1",
        "name": "Start New Recording",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/start",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 860,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "814cb9c1.212738",
        "type": "http request",
        "z": "1be6d032.e67d1",
        "name": "Start New Recording",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/start",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 380,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e18ac9bd.0ec428",
        "type": "function",
        "z": "1be6d032.e67d1",
        "name": "",
        "func": "var counterData = {\n    payload : {\n        precision: 'ms',\n        data : []\n    }\n};\n\nfor (const area in msg.payload.areas) {\n    const count = {\n        measurement: 'trafficCount',\n        tags: {\n            areaId: area,\n            areaName: msg.payload.areas[area].name,\n            feedName : 'camera1',\n        },\n        fields : {\n            periodMs: Date.parse(msg.payload.dateEnd)-Date.parse(msg.payload.dateStart),\n            _total: 0\n        },\n        timestamp: Date.parse(msg.payload.dateEnd)\n    };\n\n    Object.assign(count.fields, msg.payload.counterSummary[area]);\n    counterData.payload.data.push(count);\n}\n\nreturn counterData;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "64eb0261.aeb72c",
                "d5ba0d07.bf4f"
            ]
        ]
    },
    {
        "id": "f1beff78.2d16f",
        "type": "debug",
        "z": "1be6d032.e67d1",
        "name": "InfluxDB Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 380,
        "wires": []
    },
    {
        "id": "64eb0261.aeb72c",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "1be6d032.e67d1",
        "server": "55b0ee05.ab5a3",
        "name": "InfluxDB2 write",
        "x": 620,
        "y": 380,
        "wires": [
            [
                "f1beff78.2d16f"
            ]
        ]
    },
    {
        "id": "d5ba0d07.bf4f",
        "type": "debug",
        "z": "1be6d032.e67d1",
        "name": "InfluxDB data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 300,
        "wires": []
    },
    {
        "id": "c11e8ba2.82be48",
        "type": "http request",
        "z": "1be6d032.e67d1",
        "name": "start OpenDataCam",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:8080/start",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 220,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "55b0ee05.ab5a3",
        "type": "Stackhero-InfluxDB-v2-Server",
        "z": "",
        "name": "InfluxDB2 Cloud",
        "host": "eu-central-1-1.aws.cloud2.influxdata.com",
        "port": "443",
        "tls": true
    }
]