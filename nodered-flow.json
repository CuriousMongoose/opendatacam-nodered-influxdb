[
    {
        "id": "bdfae9d.cf2b718",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b31a1670.a4b1e8",
        "type": "inject",
        "z": "bdfae9d.cf2b718",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "3f17061.06d7afa"
            ]
        ]
    },
    {
        "id": "3f17061.06d7afa",
        "type": "http request",
        "z": "bdfae9d.cf2b718",
        "name": "Get ODC Status",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:8080/status",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "6ad68bb5.109514",
                "78cf5824.585f98"
            ]
        ]
    },
    {
        "id": "6ad68bb5.109514",
        "type": "debug",
        "z": "bdfae9d.cf2b718",
        "name": "ODC status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 40,
        "wires": []
    },
    {
        "id": "78cf5824.585f98",
        "type": "switch",
        "z": "bdfae9d.cf2b718",
        "name": "Recording Active?",
        "property": "payload.appState.recordingStatus.isRecording",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "2bdf7274.61726e"
            ],
            [
                "bc918c63.bddbe"
            ],
            [
                "1cee2a07.8b03b6"
            ]
        ]
    },
    {
        "id": "2bdf7274.61726e",
        "type": "function",
        "z": "bdfae9d.cf2b718",
        "name": "Current Recording ID",
        "func": "var recording = {\n    payload: msg.payload.appState.recordingStatus.recordingId\n}\nreturn recording;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "c3126bf.3619a98",
                "8a7686ce.24f038",
                "21eb200c.e8e34"
            ]
        ]
    },
    {
        "id": "c3126bf.3619a98",
        "type": "debug",
        "z": "bdfae9d.cf2b718",
        "name": "Recording ID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 850,
        "y": 40,
        "wires": []
    },
    {
        "id": "21eb200c.e8e34",
        "type": "http request",
        "z": "bdfae9d.cf2b718",
        "name": "Counter Data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/{{payload}}/counter",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "8514da7e.39cdc8",
                "cd4a63c1.539cc"
            ]
        ]
    },
    {
        "id": "cd4a63c1.539cc",
        "type": "debug",
        "z": "bdfae9d.cf2b718",
        "name": "Counter Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "8a7686ce.24f038",
        "type": "http request",
        "z": "bdfae9d.cf2b718",
        "name": "Stop Current Recording",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/stop",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 100,
        "wires": [
            [
                "75a7a81.c61de58"
            ]
        ]
    },
    {
        "id": "75a7a81.c61de58",
        "type": "http request",
        "z": "bdfae9d.cf2b718",
        "name": "Start New Recording",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/start",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 880,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "bc918c63.bddbe",
        "type": "http request",
        "z": "bdfae9d.cf2b718",
        "name": "Start New Recording",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/recording/start",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 380,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8514da7e.39cdc8",
        "type": "function",
        "z": "bdfae9d.cf2b718",
        "name": "",
        "func": "var counterData = {\n    payload : {\n        precision: 'ms',\n        data : []\n    }\n};\n\nfor (const area in msg.payload.areas) {\n    const count = {\n        measurement: 'trafficCount',\n        tags: {\n            areaId: area,\n            areaName: msg.payload.areas[area].name,\n            feedName : 'camera1',\n        },\n        fields : {\n            periodMs: Date.parse(msg.payload.dateEnd)-Date.parse(msg.payload.dateStart),\n            _total: 0\n        },\n        timestamp: Date.parse(msg.payload.dateEnd)\n    };\n\n    Object.assign(count.fields, msg.payload.counterSummary[area]);\n    counterData.payload.data.push(count);\n}\n\nreturn counterData;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 260,
        "wires": [
            [
                "ccea877.6a32e78",
                "1373755b.a562db"
            ]
        ]
    },
    {
        "id": "b2e1e917.1665e8",
        "type": "debug",
        "z": "bdfae9d.cf2b718",
        "name": "InfluxDB Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "ccea877.6a32e78",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "bdfae9d.cf2b718",
        "server": "80ee1b57.c20a38",
        "name": "InfluxDB2 write",
        "x": 620,
        "y": 320,
        "wires": [
            [
                "b2e1e917.1665e8"
            ]
        ]
    },
    {
        "id": "1373755b.a562db",
        "type": "debug",
        "z": "bdfae9d.cf2b718",
        "name": "InfluxDB data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "1cee2a07.8b03b6",
        "type": "http request",
        "z": "bdfae9d.cf2b718",
        "name": "start OpenDataCam",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:8080/start",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 220,
        "y": 220,
        "wires": [
            [
                "bb5c6b69.c70b88",
                "60d1f4f3.f6f92c"
            ]
        ]
    },
    {
        "id": "bb5c6b69.c70b88",
        "type": "debug",
        "z": "bdfae9d.cf2b718",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 300,
        "wires": []
    },
    {
        "id": "60d1f4f3.f6f92c",
        "type": "delay",
        "z": "bdfae9d.cf2b718",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 160,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3c425eb.778f3a2",
        "type": "complete",
        "z": "bdfae9d.cf2b718",
        "name": "",
        "scope": [
            "60d1f4f3.f6f92c"
        ],
        "uncaught": false,
        "x": 90,
        "y": 160,
        "wires": [
            [
                "3f17061.06d7afa"
            ]
        ]
    },
    {
        "id": "80ee1b57.c20a38",
        "type": "Stackhero-InfluxDB-v2-Server",
        "z": "",
        "name": "InfluxDB2 Cloud",
        "host": "eu-central-1-1.aws.cloud2.influxdata.com",
        "port": "443",
        "tls": true
    }
]